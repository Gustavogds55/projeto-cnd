const { chromium } = require('playwright');

async function consultarCertidao(cnpj) {
    const browser = await chromium.launch({ headless: false });
    const page = await browser.newPage();
    
    try {
        console.log('üöÄ Iniciando consulta de certid√£o negativa...');
        console.log(`üìã CNPJ: ${cnpj}`);
        
        // Acessa a p√°gina da prefeitura
        await page.goto('https://servicos.cloud.el.com.br/mg-montesantodeminas-pm/services/certidao_retirada.php');
        
        // Aguarda a p√°gina carregar
        await page.waitForLoadState('networkidle');
        await page.waitForTimeout(3000);
        
        // Tenta encontrar e selecionar a op√ß√£o CNPJ
        console.log('üîç Procurando op√ß√£o CNPJ...');
        
        const cnpjSelectors = [
            '#cgc',
            'input[name="set_tipo"][value="cgc"]',
            'input[id="cgc"]'
        ];
        
        let cnpjSelected = false;
        for (const selector of cnpjSelectors) {
            try {
                await page.check(selector, { timeout: 2000 });
                console.log('‚úÖ Op√ß√£o CNPJ selecionada');
                cnpjSelected = true;
                // Aguarda o campo ser habilitado ap√≥s selecionar CGC
                await page.waitForTimeout(1000);
                break;
            } catch (error) {
                continue;
            }
        }
        
        if (!cnpjSelected) {
            console.log('‚ö†Ô∏è N√£o foi poss√≠vel selecionar CNPJ automaticamente');
        }
        
        // Tenta preencher o campo do documento
        console.log('üìù Preenchendo CNPJ...');
        
        const documentSelectors = [
            '#codigo',
            'input[name="codigo"]',
            'input[id="codigo"]'
        ];
        
        let cnpjFilled = false;
        for (const selector of documentSelectors) {
            try {
                console.log(`üîç Tentando preencher com seletor: ${selector}`);
                await page.waitForSelector(selector, { state: 'visible', timeout: 3000 });
                
                // Limpa o campo primeiro
                await page.fill(selector, '');
                await page.waitForTimeout(500);
                
                // Preenche o CNPJ
                await page.fill(selector, cnpj);
                
                // Verifica se foi preenchido
                const value = await page.inputValue(selector);
                console.log(`üìù Valor no campo: ${value}`);
                
                if (value === cnpj) {
                    console.log('‚úÖ CNPJ preenchido automaticamente');
                    cnpjFilled = true;
                    break;
                } else {
                    // Tenta com type ao inv√©s de fill
                    await page.click(selector);
                    await page.keyboard.press('Control+a');
                    await page.keyboard.type(cnpj);
                    
                    const newValue = await page.inputValue(selector);
                    if (newValue === cnpj) {
                        console.log('‚úÖ CNPJ preenchido com type');
                        cnpjFilled = true;
                        break;
                    }
                }
            } catch (error) {
                console.log(`‚ö†Ô∏è Erro com seletor ${selector}: ${error.message}`);
                continue;
            }
        }
        
        if (!cnpjFilled) {
            console.log('‚ö†Ô∏è N√£o foi poss√≠vel preencher CNPJ automaticamente');
            console.log('üìã Por favor, preencha manualmente o CNPJ:', cnpj);
        }
        
        console.log('üîê Por favor, digite o CAPTCHA manualmente e clique em "Imprimir"');
        
        // Aguarda o usu√°rio resolver o CAPTCHA e submeter
        await page.waitForNavigation({ timeout: 300000 }); // 5 minutos
        
        // Verifica o resultado
        const resultado = await verificarResultado(page);
        console.log('üìÑ Resultado da consulta:', resultado);
        
        return resultado;
        
    } catch (error) {
        console.error('‚ùå Erro durante a consulta:', error.message);
        throw error;
    } finally {
        await browser.close();
    }
}

async function verificarResultado(page) {
    // Aguarda o resultado aparecer
    await page.waitForTimeout(2000);
    
    const pageContent = await page.content();
    
    if (pageContent.includes('CERTID√ÉO NEGATIVA') || pageContent.includes('Certid√£o Negativa')) {
        return { status: 'NEGATIVA', descricao: 'N√£o h√° d√©bitos municipais' };
    } else if (pageContent.includes('CERTID√ÉO POSITIVA') || pageContent.includes('Certid√£o Positiva')) {
        return { status: 'POSITIVA', descricao: 'Existem d√©bitos municipais' };
    } else if (pageContent.includes('COM EFEITOS DE NEGATIVA')) {
        return { status: 'COM_EFEITOS_NEGATIVA', descricao: 'D√©bitos parcelados ou suspensos' };
    } else {
        return { status: 'INDETERMINADO', descricao: 'N√£o foi poss√≠vel determinar o status' };
    }
}

// Execu√ß√£o principal
async function main() {
    const cnpj = process.argv[2];
    
    if (!cnpj) {
        console.log('‚ùå Por favor, informe o CNPJ como par√¢metro');
        console.log('üìù Uso: node consultaCertidao.js 12.345.678/0001-90');
        process.exit(1);
    }
    
    try {
        const resultado = await consultarCertidao(cnpj);
        console.log('\nüìä RESULTADO FINAL:');
        console.log(`Status: ${resultado.status}`);
        console.log(`Descri√ß√£o: ${resultado.descricao}`);
    } catch (error) {
        console.error('üí• Falha na execu√ß√£o:', error.message);
        process.exit(1);
    }
}

if (require.main === module) {
    main();
}

module.exports = { consultarCertidao };